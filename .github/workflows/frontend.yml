name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.13.0'

    - name: Install dependencies
      run: npm ci

    - name: Format Code
      run: npm run format

    - name: Check for uncommitted changes
      run: |
        if [[ `git status --porcelain` ]]; then
          echo "Code was not properly formatted before commit!"
          git diff
          exit 1
        fi

    - name: Lint Check
      run: npm run lint

    - name: Slack Notification on Success
      if: success()
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_CHANNEL: dev_fanc_front
        SLACK_TITLE: デプロイが成功しました
        SLACK_COLOR: good
        SLACK_USERNAME: ちくわ
        SLACK_ICON: https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.yakult-swallows.co.jp%2Fpages%2Fguide%2Fmascot%2F2896_tsubakurou&psig=AOvVaw2MRWobUmMGSMu0w7-kuBBF&ust=1693641769341000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCKjFm7L5iIEDFQAAAAAdAAAAABAF
        SLACK_WEBHOOK: ${{ secrets.DEV_FANC_FRONT_SLACK_WEBHOOK_URL }}

    - name: Slack Notification on Failure
      uses: rtCamp/action-slack-notify@v2.0.2
      if: failure()
      env:
        SLACK_CHANNEL: dev_fanc_front
        SLACK_TITLE: デプロイが失敗しました
        SLACK_COLOR: danger
        SLACK_USERNAME: ちくわ
        SLACK_ICON: https://www.google.com/url?sa=i&url=https%3A%2F%2Ftwitter.com%2Fmiurakaigan5%2Fstatus%2F1084815890846081025&psig=AOvVaw261r_erDENUttMk8KDKp8j&ust=1693641849033000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCJCejNj5iIEDFQAAAAAdAAAAABAE
        SLACK_WEBHOOK: ${{ secrets.DEV_FANC_FRONT_SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: '<!channel> Job ${{ job.status }}. [Details here](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }})'
        FIELDS: "ref,event,message"

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.13.0'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          npm run build:production
        elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
          npm run build:staging
        else
          npm run build
        fi

  deploy:
    name: Deploy to S3
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.13.0'

    - name: Install dependencies
      run: npm ci

    - name: Build for Prod or Staging
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          npm run build:production
        else
          npm run build:staging
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to S3
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          aws s3 sync dist s3://fanc-bucket-prod
        else
          aws s3 sync dist s3://fanc-bucket-stg
        fi

    - name: Clear CloudFront Cache
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }} --paths "/*"
        else
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_STG }} --paths "/*"
        fi

    - name: Slack Notification on Success
      if: success()
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_CHANNEL: dev_fanc_front
        SLACK_TITLE: デプロイが成功しました
        SLACK_COLOR: good
        SLACK_USERNAME: ちくわ
        SLACK_ICON: https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.yakult-swallows.co.jp%2Fpages%2Fguide%2Fmascot%2F2896_tsubakurou&psig=AOvVaw2MRWobUmMGSMu0w7-kuBBF&ust=1693641769341000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCKjFm7L5iIEDFQAAAAAdAAAAABAF
        SLACK_WEBHOOK: ${{ secrets.DEV_FANC_FRONT_SLACK_WEBHOOK_URL }}

    # テスト失敗時はこちらのステップが実行される
    - name: Slack Notification on Failure
      uses: rtCamp/action-slack-notify@v2.0.2
      if: failure()
      env:
        SLACK_CHANNEL: dev_fanc_front
        SLACK_TITLE: デプロイが失敗しました
        SLACK_COLOR: danger
        SLACK_USERNAME: ちくわ
        SLACK_ICON: https://www.google.com/url?sa=i&url=https%3A%2F%2Ftwitter.com%2Fmiurakaigan5%2Fstatus%2F1084815890846081025&psig=AOvVaw261r_erDENUttMk8KDKp8j&ust=1693641849033000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCJCejNj5iIEDFQAAAAAdAAAAABAE
        SLACK_WEBHOOK: ${{ secrets.DEV_FANC_FRONT_SLACK_WEBHOOK_URL }}


